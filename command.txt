[ yum/rpm ]
yum install <package>   # installs the package if available in repository
yum history     # view the transaction history of package installs, updates, removals, and more that were performed using yum
yum history undo <ID>   # undo a specific transaction
yum history redo <ID>   # redo a specific transaction
rpm -qa     # Lists all the packages that has been installed
rpm -qi <package>   # gives the detailed information about the package
rpm -qc <package>   # gives the info about the config files of the package
needs-restarting -r     # Tells if system reboot is required after updation of packages

[ ssh-keygen ]
ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -C "<email ID>"      #Generate a New SSH Key Pair (Default RSA)
ssh-copy-id user@remote-server      #Copy SSH Key to a Remote Server (for Passwordless Login)

[ git ]
git clone <http or ssh url of the repository>       # Will clone the repository to current working pathS
git add .       # used in Git to stage all changes in the current directory (and its subdirectories) for the next commit
git commit -m "commit message"      # used in Git to create a commit with a specific message. A commit represents a snapshot of the changes staged in your repository
git push origin main    #used to upload (push) local commits from your main branch to a remote repository (origin)
git fetch origin    # Retrieves the latest updates from the remote but doesn't merge them
git reset --hard origin/main        # Forces your local branch to match the remote main branch (overwrites local changes)

[ firewall-cmd ]
firewall-cmd --state    #checks firewall status
firewall-cmd --list-all     #lists all active firewall rules
firewall-cmd --permanent --add-port=80/tcp      #Allow a Specific Port (e.g., HTTP - Port 80)
firewall-cmd --reload       #Reloads and updates the changes made in firewall setting
firewall-cmd --permanent --remove-port=80/tcp       #Remove a Specific Port
firewall-cmd --permanent --add-service=ssh      #Allow a Specific Service (e.g., SSH)
firewall-cmd --permanent --remove-service=ssh       #Remove a Specific Service
firewall-cmd --get-services     #List Available Services
firewall-cmd --permanent --add-source=192.168.1.100     #Allow a Specific IP Address
firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="192.168.1.200" reject'     #Block a Specific IP Address
firewall-cmd --set-log-denied=all       #Enable Logging for Dropped Packets

[ Increase disk space(LVM) ]
1.  # Attach hard disk to your system
2.  lsblk   # Check whether the new hard disk has attached successfully
3.  pvdisplay  # displays the physical volume
4.  pvcreate /dev/sdc  # Create physical volume(Note: /dev/sdc is for example and the actual path of physical volume attached can be obtained using lsblk command)
5.  pvdisplay # verify the physical volume created
6.  vgdisplay # Displays all volume group Available
7.  vgextend rhel /dev/sdc   # Extends volume group "rhel". Volume group information can be obtained from vgdisplay command.
8.  vgdisplay # verify whether volume group has been extended
9.  lvdisplay # Displays list of logical volume
10. lvextend -l +100%FREE /dev/mapper/rhel-opt # Extends the volume group to alloted size. Note: check which logical volume you want to increase by checking in "df -h" command
11. lvdisplay # verify whether logical volume has extended
12. xfs_grow /dev/mapper/rhel-opt  (for xfs system)
or
    resize2fs /dev/mapper/rhel-opt  (for ext4 file system)
13. df -h   #Verify whether file system space has increased or not

[ vagrant ]
vagrant init    # creates a Vagrantfile in the current working directory
vagrant init ubuntu/jammy64     # creates a Vagrantfile with Ubuntu 22.04 LTS as the base OS
vagrant up      # starts the VM using the provider (default is VirtualBox)
vagrant ssh     # Logs into the running VM
vagrant suspend   # Pause the VM (saves state)
vagrant halt      # Shut down the VM
vagrant destroy   # Completely remove the VM